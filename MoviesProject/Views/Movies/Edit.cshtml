@model MoviesProject.Models.Movie

@{
    ViewBag.Title = "Редактирование";
}

<h2>Редактирование</h2>


@using (Html.BeginForm("Edit", "Movies", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.poster)
        @Html.HiddenFor(model => model.PageNum)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.description, 10, 100, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.director, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.director, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.director, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.poster, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (!string.IsNullOrEmpty(Model.poster))
                {
                    <img src="@Url.Content(Model.poster)" width="200" />
                    @Html.ActionLink(" ", "DeletePoster", "Movies", new { id = Model.id, PageNum = Model.PageNum }, new { @class = "glyphicon glyphicon-remove-circle", @title = "Удалить постер", @onclick = "return confirm('Действительно желаете удалить постер?')" })
                    @Html.ActionLink(" Удалить постер", "DeletePoster", "Movies", new { id = Model.id, PageNum = Model.PageNum }, new { @onclick = "return confirm('Действительно желаете удалить постер?')" })
                }
                else
                {
                    @Html.TextBoxFor(model => model.file, new { type = "file", accept = "image/*" })
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
            @Html.ActionLink("Вернуться к списку фильмов", "Index", new { page = Model.PageNum })
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
